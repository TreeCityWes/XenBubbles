{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\XenBubbles\\\\XenBubbles\\\\src\\\\components\\\\BubbleListSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Papa from 'papaparse';\nimport { fetchTokenData } from '../services/dexscreener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListSelector = styled.div`\n  margin-bottom: 20px;\n`;\n_c = ListSelector;\nconst Button = styled.button`\n  background: ${props => props.active ? '#3498db' : '#2c3e50'};\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  margin: 0 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: #3498db;\n  }\n`;\n_c2 = Button;\nconst lists = ['Xen', 'Xen-Alts', 'DBXen'];\nconst BubbleListSelector = ({\n  onListChange\n}) => {\n  _s();\n  const [activeList, setActiveList] = useState('Xen');\n  const [listData, setListData] = useState([]);\n  useEffect(() => {\n    loadListData(activeList);\n  }, [activeList]);\n  const loadListData = async listName => {\n    try {\n      const response = await fetch(`/lists/${listName}.csv`);\n      const text = await response.text();\n      Papa.parse(text, {\n        header: true,\n        complete: async results => {\n          // Fetch market data for each token\n          const tokensWithData = await Promise.all(results.data.map(async token => {\n            const marketData = await fetchTokenData(token.contract);\n            return {\n              ...token,\n              ...marketData,\n              // Fallback color if no market data\n              color: (marketData === null || marketData === void 0 ? void 0 : marketData.color) || '#3498db'\n            };\n          }));\n          setListData(tokensWithData);\n          onListChange(tokensWithData);\n        }\n      });\n    } catch (error) {\n      console.error('Error loading CSV:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ListSelector, {\n    children: lists.map(list => /*#__PURE__*/_jsxDEV(Button, {\n      active: activeList === list,\n      onClick: () => setActiveList(list),\n      children: list\n    }, list, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(BubbleListSelector, \"I2T4ZNKlr3Dwo5pTxxVUUozh5wY=\");\n_c3 = BubbleListSelector;\nexport default BubbleListSelector;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ListSelector\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"BubbleListSelector\");","map":{"version":3,"names":["React","useState","useEffect","styled","Papa","fetchTokenData","jsxDEV","_jsxDEV","ListSelector","div","_c","Button","button","props","active","_c2","lists","BubbleListSelector","onListChange","_s","activeList","setActiveList","listData","setListData","loadListData","listName","response","fetch","text","parse","header","complete","results","tokensWithData","Promise","all","data","map","token","marketData","contract","color","error","console","children","list","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Projects/XenBubbles/XenBubbles/src/components/BubbleListSelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Papa from 'papaparse';\r\nimport { fetchTokenData } from '../services/dexscreener';\r\n\r\nconst ListSelector = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: ${props => props.active ? '#3498db' : '#2c3e50'};\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin: 0 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    background: #3498db;\r\n  }\r\n`;\r\n\r\nconst lists = ['Xen', 'Xen-Alts', 'DBXen'];\r\n\r\nconst BubbleListSelector = ({ onListChange }) => {\r\n  const [activeList, setActiveList] = useState('Xen');\r\n  const [listData, setListData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadListData(activeList);\r\n  }, [activeList]);\r\n\r\n  const loadListData = async (listName) => {\r\n    try {\r\n      const response = await fetch(`/lists/${listName}.csv`);\r\n      const text = await response.text();\r\n      \r\n      Papa.parse(text, {\r\n        header: true,\r\n        complete: async (results) => {\r\n          // Fetch market data for each token\r\n          const tokensWithData = await Promise.all(\r\n            results.data.map(async (token) => {\r\n              const marketData = await fetchTokenData(token.contract);\r\n              return {\r\n                ...token,\r\n                ...marketData,\r\n                // Fallback color if no market data\r\n                color: marketData?.color || '#3498db'\r\n              };\r\n            })\r\n          );\r\n          \r\n          setListData(tokensWithData);\r\n          onListChange(tokensWithData);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error loading CSV:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListSelector>\r\n      {lists.map(list => (\r\n        <Button\r\n          key={list}\r\n          active={activeList === list}\r\n          onClick={() => setActiveList(list)}\r\n        >\r\n          {list}\r\n        </Button>\r\n      ))}\r\n    </ListSelector>\r\n  );\r\n};\r\n\r\nexport default BubbleListSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}