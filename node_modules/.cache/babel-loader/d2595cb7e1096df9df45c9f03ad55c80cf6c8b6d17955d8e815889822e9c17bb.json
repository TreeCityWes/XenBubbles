{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\XenBubbles\\\\XenBubbles\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    // Clear any existing SVG content\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    // Set up dimensions\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const padding = 2;\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]);\n\n    // Load and process data\n    Promise.all([d3.csv(\"/lists/Xen.csv\"), d3.csv(\"/lists/Xen-Alts.csv\"), d3.csv(\"/lists/DBXen.csv\")]).then(([xenData, xenAltsData, dbXenData]) => {\n      // Combine and process data\n      const combinedData = [...xenData, ...xenAltsData, ...dbXenData];\n\n      // Create bubble pack layout\n      const pack = d3.pack().size([width - 2, height - 2]).padding(padding);\n\n      // Create hierarchy\n      const root = d3.hierarchy({\n        children: combinedData\n      }).sum(d => d.size || 1);\n      const nodes = pack(root).leaves();\n\n      // Create bubble groups\n      const bubbles = svg.selectAll('.bubble').data(nodes).join('g').attr('class', 'bubble').attr('transform', d => `translate(${d.x},${d.y})`);\n\n      // Add circles\n      bubbles.append('circle').attr('r', d => d.r).style('fill', d => d3.interpolateRainbow(Math.random())).style('fill-opacity', 0.7).style('stroke', '#fff').style('stroke-width', 2);\n\n      // Add text labels\n      bubbles.append('text').attr('text-anchor', 'middle').attr('dominant-baseline', 'middle').style('font-size', d => Math.min(d.r / 3, 16) + 'px').style('fill', '#fff').text(d => d.data.name || 'Unknown').call(wrap, d => d.r * 1.5);\n\n      // Add force simulation\n      const simulation = d3.forceSimulation(nodes).force('center', d3.forceCenter(width / 2, height / 2)).force('charge', d3.forceManyBody().strength(5)).force('collision', d3.forceCollide().radius(d => d.r + padding).strength(0.8)).on('tick', () => {\n        bubbles.attr('transform', d => `translate(${d.x},${d.y})`);\n      });\n\n      // Add zoom behavior\n      const zoom = d3.zoom().scaleExtent([0.5, 5]).on('zoom', event => {\n        svg.attr('transform', event.transform);\n      });\n      svg.call(zoom);\n    });\n  }, []);\n\n  // Text wrapping function\n  function wrap(text, width) {\n    text.each(function () {\n      const text = d3.select(this);\n      const words = text.text().split(/\\s+/);\n      const lineHeight = 1.1;\n      const y = text.attr('y');\n      const dy = parseFloat(text.attr('dy') || 0);\n      let line = [];\n      let lineNumber = 0;\n      let tspan = text.text(null).append('tspan').attr('x', 0).attr('y', y).attr('dy', dy + 'em');\n      words.forEach(word => {\n        line.push(word);\n        tspan.text(line.join(' '));\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(' '));\n          line = [word];\n          tspan = text.append('tspan').attr('x', 0).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n        }\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","App","_s","svgRef","select","current","selectAll","remove","width","window","innerWidth","height","innerHeight","padding","svg","attr","Promise","all","csv","then","xenData","xenAltsData","dbXenData","combinedData","pack","size","root","hierarchy","children","sum","d","nodes","leaves","bubbles","data","join","x","y","append","r","style","interpolateRainbow","Math","random","min","text","name","call","wrap","simulation","forceSimulation","force","forceCenter","forceManyBody","strength","forceCollide","radius","on","zoom","scaleExtent","event","transform","each","words","split","lineHeight","dy","parseFloat","line","lineNumber","tspan","forEach","word","push","node","getComputedTextLength","pop","className","ref","fileName","_jsxFileName","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/XenBubbles/XenBubbles/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Clear any existing SVG content\r\n    d3.select(svgRef.current).selectAll(\"*\").remove();\r\n\r\n    // Set up dimensions\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n    const padding = 2;\r\n\r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .attr(\"viewBox\", [0, 0, width, height]);\r\n\r\n    // Load and process data\r\n    Promise.all([\r\n      d3.csv(\"/lists/Xen.csv\"),\r\n      d3.csv(\"/lists/Xen-Alts.csv\"),\r\n      d3.csv(\"/lists/DBXen.csv\")\r\n    ]).then(([xenData, xenAltsData, dbXenData]) => {\r\n      // Combine and process data\r\n      const combinedData = [...xenData, ...xenAltsData, ...dbXenData];\r\n      \r\n      // Create bubble pack layout\r\n      const pack = d3.pack()\r\n        .size([width - 2, height - 2])\r\n        .padding(padding);\r\n\r\n      // Create hierarchy\r\n      const root = d3.hierarchy({ children: combinedData })\r\n        .sum(d => d.size || 1);\r\n\r\n      const nodes = pack(root).leaves();\r\n\r\n      // Create bubble groups\r\n      const bubbles = svg.selectAll('.bubble')\r\n        .data(nodes)\r\n        .join('g')\r\n        .attr('class', 'bubble')\r\n        .attr('transform', d => `translate(${d.x},${d.y})`);\r\n\r\n      // Add circles\r\n      bubbles.append('circle')\r\n        .attr('r', d => d.r)\r\n        .style('fill', d => d3.interpolateRainbow(Math.random()))\r\n        .style('fill-opacity', 0.7)\r\n        .style('stroke', '#fff')\r\n        .style('stroke-width', 2);\r\n\r\n      // Add text labels\r\n      bubbles.append('text')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dominant-baseline', 'middle')\r\n        .style('font-size', d => Math.min(d.r / 3, 16) + 'px')\r\n        .style('fill', '#fff')\r\n        .text(d => d.data.name || 'Unknown')\r\n        .call(wrap, d => d.r * 1.5);\r\n\r\n      // Add force simulation\r\n      const simulation = d3.forceSimulation(nodes)\r\n        .force('center', d3.forceCenter(width / 2, height / 2))\r\n        .force('charge', d3.forceManyBody().strength(5))\r\n        .force('collision', d3.forceCollide().radius(d => d.r + padding).strength(0.8))\r\n        .on('tick', () => {\r\n          bubbles.attr('transform', d => `translate(${d.x},${d.y})`);\r\n        });\r\n\r\n      // Add zoom behavior\r\n      const zoom = d3.zoom()\r\n        .scaleExtent([0.5, 5])\r\n        .on('zoom', (event) => {\r\n          svg.attr('transform', event.transform);\r\n        });\r\n\r\n      svg.call(zoom);\r\n    });\r\n  }, []);\r\n\r\n  // Text wrapping function\r\n  function wrap(text, width) {\r\n    text.each(function() {\r\n      const text = d3.select(this);\r\n      const words = text.text().split(/\\s+/);\r\n      const lineHeight = 1.1;\r\n      const y = text.attr('y');\r\n      const dy = parseFloat(text.attr('dy') || 0);\r\n      \r\n      let line = [];\r\n      let lineNumber = 0;\r\n      let tspan = text.text(null).append('tspan').attr('x', 0).attr('y', y).attr('dy', dy + 'em');\r\n      \r\n      words.forEach(word => {\r\n        line.push(word);\r\n        tspan.text(line.join(' '));\r\n        if (tspan.node().getComputedTextLength() > width) {\r\n          line.pop();\r\n          tspan.text(line.join(' '));\r\n          line = [word];\r\n          tspan = text.append('tspan')\r\n            .attr('x', 0)\r\n            .attr('y', y)\r\n            .attr('dy', ++lineNumber * lineHeight + dy + 'em')\r\n            .text(word);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <svg ref={svgRef}></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}